***1. Write a C program to calculate sum of digits of a number.***

#include<stdio.h>
int main(){
    int n,r,sum=0;
    scanf("%d",&n);
    while(n>0){
        r=n%10;
        sum+=r;
        n/=10;
    }
    printf("sum : %d",sum);
    return 0;
}

2. Write a C program to find first and last digit of a number.

#include <stdio.h>
int main() {
    int n, f, l;
    printf("Enter a number: ");
    scanf("%d", &n);
    l = n % 10;
    n = (n < 0) ? -n : n;
    while (n >= 10) {
        n = n / 10;
    }
    f = n;
    printf("First digit: %d\n", f);
    printf("Last digit: %d\n", l);
    return 0;
}

3. Write a C program to find sum of first and last digit of a number.

#include <stdio.h>
int main() {
    int n, f, l,sum=0;
    printf("Enter a number: ");
    scanf("%d", &n);
    l = n % 10;
    n = (n < 0) ? -n : n;
    while (n >= 10) {
        n = n / 10;
    }
    f = n;
    printf("sum: %d", f+l);
    return 0;
}

4. Write a C program to swap first and last digits of a number.

#include <stdio.h>
#include <math.h>

int swapFirstAndLastDigits(int num) {
    if (num >= 0 && num <= 9) {
        return num;
    }
    int lastDigit = num % 10;
    int digits = (int)log10(num);
    int firstDigit = num / (int)pow(10, digits);
    int middlePart = num % (int)pow(10, digits);
    middlePart = middlePart / 10;
    int swappedNum = lastDigit * (int)pow(10, digits);
    swappedNum += middlePart * 10;
    swappedNum+=firstDigit;

    return swappedNum;
}

int main() {
    int number;
    printf("Enter a number: ");
    scanf("%d", &number);
    int sign = 1;
    if (number < 0) {
        sign = -1;
        number = -number;
    }
    int swappedNumber = swapFirstAndLastDigits(number);
    swappedNumber *= sign;
    printf("Number after swapping first and last digits: %d\n", swappedNumber);
    return 0;
}

5. Write a C program to find frequency of each digit in a given integer.

#include <stdio.h>
int main() {
    int number, digit;
    int frequency[10] = {0};

    printf("Enter an integer: ");
    scanf("%d", &number);
    if (number < 0) {
        number = -number;
    }
    while (number > 0) {
        digit = number % 10;
        frequency[digit]++;
        number = number / 10;
    }
    printf("Frequency of each digit:\n");
    for (int i = 0; i < 10; i++) {
        printf("Digit %d: %d\n", i, frequency[i]);
    }
    return 0;
}

6. Write a C program to enter a number and print it in words.
#include <stdio.h>

void convertToWords(int n) {
    char *ones[] = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
    char *teens[] = {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
    char *tens[] = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
    char *thousands[] = {"", "Thousand", "Million", "Billion"};

    // If the number is zero
    if (n == 0) {
        printf("Zero\n");
        return;
    }

    int i = 0;
    char result[500] = "";  // To store the result in words

    // Iterate over all groups of 3 digits (thousands, hundreds, etc.)
    while (n > 0) {
        if (n % 1000 != 0) {
            char group[500] = "";

            // Process hundreds place
            if ((n % 1000) / 100 != 0) {
                sprintf(group + strlen(group), "%s Hundred ", ones[(n % 1000) / 100]);
            }

            // Process tens and ones place
            if ((n % 100) / 10 == 1) {
                sprintf(group + strlen(group), "%s ", teens[n % 10]);
            } else {
                if ((n % 100) / 10 != 0) {
                    sprintf(group + strlen(group), "%s ", tens[(n % 100) / 10]);
                }
                if (n % 10 != 0) {
                    sprintf(group + strlen(group), "%s ", ones[n % 10]);
                }
            }

            // Add the group to the result with its corresponding place (thousands, etc.)
            sprintf(result + strlen(result), "%s %s", group, thousands[i]);
        }

        n /= 1000;
        i++;
    }

    // Print the final result
    printf("%s\n", result);
}

int main() {
    int num;

    printf("Enter a number: ");
    scanf("%d", &num);

    printf("The number in words is: ");
    convertToWords(num);

    return 0;
}

***7.Write a C program to find one’s complement of a binary number.***

#include <stdio.h>
#include <string.h>

void onesComplement(char binary[]) {
    int length = strlen(binary);

    for (int i = 0; i < length; i++) {
        if (binary[i] == '0')
            binary[i] = '1'; // Replace 0 with 1
        else if (binary[i] == '1')
            binary[i] = '0'; // Replace 1 with 0
    }
}

int main() {
    char binary[100];
    printf("Enter a binary number: ");
    scanf("%s", binary);
    onesComplement(binary);
    printf("One's complement of the binary number is: %s\n", binary);

    return 0;
}

8.Write a C program to find two’s complement of a binary number.

#include <stdio.h>
#include <string.h>

// Function to find one's complement
void onesComplement(char binary[]) {
    int length = strlen(binary);

    // Traverse each character of the binary number and invert it
    for (int i = 0; i < length; i++) {
        if (binary[i] == '0')
            binary[i] = '1'; // Replace 0 with 1
        else if (binary[i] == '1')
            binary[i] = '0'; // Replace 1 with 0
    }
}

// Function to add 1 to the binary number (to get two's complement)
void addOne(char binary[]) {
    int length = strlen(binary);
    int carry = 1;

    // Traverse the binary number from the right and add 1
    for (int i = length - 1; i >= 0; i--) {
        if (binary[i] == '0' && carry == 1) {
            binary[i] = '1';
            carry = 0; // No more carry needed
            break;
        }
        else if (binary[i] == '1' && carry == 1) {
            binary[i] = '0'; // Continue adding carry
        }
    }
}

int main() {
    char binary[100];
    printf("Enter a binary number: ");	// Input binary number
    scanf("%s", binary);
    onesComplement(binary);	 // Find one's complement
    addOne(binary);	// Add 1 to get two's complement
    printf("Two's complement of the binary number is: %s\n", binary);

    return 0;
}

9.Write a C program to convert Decimal to Hexadecimal number system

#include <stdio.h>
// Function to convert decimal to hexadecimal
void decimalToHexadecimal(int decimal) {
    char hex[100];	// Array to store hexadecimal digits
    int i = 0;
    // Edge case: If the decimal number is zero
    if (decimal == 0) {
        printf("Hexadecimal: 0\n");
        return;
    }

    // Loop to convert the decimal number to hexadecimal
    while (decimal != 0) {
        int remainder = decimal % 16;
        // If remainder is less than 10, store it as a number
        if (remainder < 10) {
            hex[i] = remainder + '0';
        } else {
            hex[i] = remainder - 10 + 'A';	// If remainder is 10-15, store it as a letter (A-F)
        }
        i++;
        decimal = decimal / 16;
    }
    // Print hexadecimal in reverse order
    printf("Hexadecimal: ");
    for (int j = i - 1; j >= 0; j--) {
        printf("%c", hex[j]);
    }
    printf("\n");
}

int main() {
    int decimal;
    printf("Enter a decimal number: ");	// Input decimal number
    scanf("%d", &decimal);
    decimalToHexadecimal(decimal);	 // Convert and print the hexadecimal equivalent
    return 0;
}
